{
  "info": {
    "name": "Aeropuertos",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Crear aeropuerto v\u00e1lido",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 201\", function () { pm.response.to.have.status(201); });",
              "var json = pm.response.json();",
              "pm.collectionVariables.set(\"airportId\", json.id);"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/airports",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"nombre\": \"El Dorado\",\n  \"codigo\": \"BOG\",\n  \"pais\": \"Colombia\",\n  \"ciudad\": \"Bogot\\u00e1\"\n}"
        }
      }
    },
    {
      "name": "Crear aeropuerto inv\u00e1lido (c\u00f3digo incorrecto)",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 400\", function () { pm.response.to.have.status(400); });"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/airports",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"nombre\": \"Inv\\u00e1lido\",\n  \"codigo\": \"B\",\n  \"pais\": \"Colombia\",\n  \"ciudad\": \"Bogot\\u00e1\"\n}"
        }
      }
    },
    {
      "name": "Obtener todos los aeropuertos",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Debe retornar un array\", function () { pm.expect(pm.response.json()).to.be.an('array'); });"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/airports",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports"
          ]
        }
      }
    },
    {
      "name": "Obtener aeropuerto por ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"ID debe coincidir\", function () {",
              "  var json = pm.response.json();",
              "  pm.expect(json.id).to.eql(parseInt(pm.collectionVariables.get(\"airportId\")));",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/airports/{{airportId}}",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "{{airportId}}"
          ]
        }
      }
    },
    {
      "name": "Obtener aeropuerto inexistente",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 404\", function () { pm.response.to.have.status(404); });"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/airports/9999",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "9999"
          ]
        }
      }
    },
    {
      "name": "Actualizar aeropuerto v\u00e1lido",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 200\", function () { pm.response.to.have.status(200); });",
              "pm.test(\"Ciudad actualizada\", function () {",
              "  var json = pm.response.json();",
              "  pm.expect(json.ciudad).to.eql(\"Medell\u00edn\");",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/airports/{{airportId}}",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "{{airportId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"ciudad\": \"Medell\\u00edn\"\n}"
        }
      }
    },
    {
      "name": "Actualizar aeropuerto con c\u00f3digo inv\u00e1lido",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 400\", function () { pm.response.to.have.status(400); });"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/airports/{{airportId}}",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "{{airportId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"codigo\": \"MUYS\"\n}"
        }
      }
    },
    {
      "name": "Actualizar aeropuerto inexistente",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 404\", function () { pm.response.to.have.status(404); });"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/airports/9999",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "9999"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n  \"ciudad\": \"Barranquilla\"\n}"
        }
      }
    },
    {
      "name": "Eliminar aeropuerto v\u00e1lido",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 200 o 204\", function () { pm.expect([200,204]).to.include(pm.response.code); });"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/airports/{{airportId}}",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "{{airportId}}"
          ]
        }
      }
    },
    {
      "name": "Eliminar aeropuerto inexistente",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status 404\", function () { pm.response.to.have.status(404); });"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:3000/airports/9999",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "airports",
            "9999"
          ]
        }
      }
    }
  ],
  "variable": [
    {
      "key": "airportId",
      "value": ""
    }
  ]
}